@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.RazorPages;
@using Microsoft.AspNetCore.Mvc.Rendering;
@using Microsoft.AspNetCore.Mvc.ViewFeatures;
@using System.Net.Http.Headers;
@using System.Text.Json;

@*@model List<WorkflowEngineMVC.ViewModels.StateViewModel>*@
@{
    ViewBag.Title = "CPRO";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model WorkFlowResponseModel
<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">  
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>  
<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>  
<div>
    <div >  
        @Html.PartialAsync("CaseFilter",Model).Result  
    </div>
    <br />
    <div >  
        @Html.PartialAsync("CPRORibbon",Model).Result  
    </div>
    <br />   
    <div>
         <table class="tableborder" style="width:50%">
            <tr>
                <td style="color:blue; background-color:blue; color:white;">                    
                    Update Activity                           
                </td>
            </tr> 
            <tr>
                <td>                     
                    @{                        
                        var wfJsonModel = JsonSerializer.Serialize(Model);  
                    }                                                                                           
                    <table style="width:100%">                                                                            
                            @foreach (var command in Model.ListCommandModel)
                            {   
                             <tr>  
                                 <td>                                             
                                       <a class="navlinkcolor" asp-area="" asp-controller="CPROChain" asp-action="ProcessCommand" asp-route-jsonString=@wfJsonModel asp-route-commandName=@command.CommandName >@command.CommandName</a>                                               
                                 </td>  
                             </tr>        
                            }                                  
                    </table>
                </td>
            </tr>
        </table>
    </div>
    @if (@Model.CPROUserAlertModel != null)
    {                
        <br />
        <div>  
            @Html.PartialAsync("CPROUserAlert",Model).Result  
        </div>        
    }
</div>